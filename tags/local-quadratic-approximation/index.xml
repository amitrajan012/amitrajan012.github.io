<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Local Quadratic Approximation on Amit Rajan</title>
    <link>https://amitrajan012.github.io/tags/local-quadratic-approximation/</link>
    <description>Recent content in Local Quadratic Approximation on Amit Rajan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Jul 2022 23:07:28 +0100</lastBuildDate><atom:link href="https://amitrajan012.github.io/tags/local-quadratic-approximation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Neural Networks - Network Training</title>
      <link>https://amitrajan012.github.io/post/pattern-recognition-chapter-5-neural-networks_2/</link>
      <pubDate>Mon, 11 Jul 2022 23:07:28 +0100</pubDate>
      
      <guid>https://amitrajan012.github.io/post/pattern-recognition-chapter-5-neural-networks_2/</guid>
      <description>5.2 Network Training A simple approach to the problem of determining the network parameters is to make an analogy with the discussion of polynomial curve fitting, and therefore to minimize a sum-of-squares error function. Given a training set comprising a set of input vectors ${X_n}$, where $n=1,2,&amp;hellip;,N$ with the corresponding output set as ${t_n}$, we minimize the error function
$$\begin{align} E(W) = \frac{1}{2}\sum_{n=1}^{N}||y_n(X_n,W) - t_n||^2 \end{align}$$
Let us consider a regression case with single target variable $t$ that can take any real value.</description>
    </item>
    
  </channel>
</rss>
